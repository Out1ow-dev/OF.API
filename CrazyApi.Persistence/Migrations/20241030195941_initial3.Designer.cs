// <auto-generated />
using System;
using CrazyApi.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrazyApi.Persistence.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20241030195941_initial3")]
    partial class initial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.35");

            modelBuilder.Entity("CrazyApi.Domain.Models.ServerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerIp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServerOwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerPort")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerOwnerId");

                    b.ToTable("ServersList");
                });

            modelBuilder.Entity("CrazyApi.Domain.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrazyApi.Domain.Models.ServerEntity", b =>
                {
                    b.HasOne("CrazyApi.Domain.Models.UserEntity", "ServerOwner")
                        .WithMany("ServerList")
                        .HasForeignKey("ServerOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServerOwner");
                });

            modelBuilder.Entity("CrazyApi.Domain.Models.UserEntity", b =>
                {
                    b.Navigation("ServerList");
                });
#pragma warning restore 612, 618
        }
    }
}
